{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aishr\\\\Downloads\\\\Excentrixproject (1)\\\\Excentrixproject\\\\projectManager\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/styles.css\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: 1,\n  name: \"Documents\"\n}, {\n  id: 2,\n  name: \"Audio Files\"\n}, {\n  id: 3,\n  name: \"video Files\"\n}, {\n  id: 4,\n  name: \"Spreadsheets\"\n}, {\n  id: 5,\n  name: \"Reports\"\n}, {\n  id: 6,\n  name: \"Designs\"\n}, {\n  id: 7,\n  name: \"Word Document\"\n}, {\n  id: 8,\n  name: \"Presentation\"\n}, {\n  id: 9,\n  name: \"Image Files\"\n}];\nconst Dashboard = () => {\n  _s();\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const handleProjectClick = project => {\n    setSelectedProject(project);\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/*,application/pdf\",\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const handleUpload = async () => {\n    if (!selectedProject) {\n      alert(\"Please select a project first\");\n      return;\n    }\n    setUploading(true);\n    try {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append(\"file\", file);\n      });\n      formData.append(\"projectId\", selectedProject.id.toString());\n      const response = await axios.post(\"http://localhost:8080/api/files\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response.data);\n      alert(\"Files uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n      alert(\"Error uploading files.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects/Type Of File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleProjectClick(project),\n          className: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id) === project.id ? \"active\" : \"\",\n          children: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"project-info\",\n        children: selectedProject ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedProject.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Details about \", selectedProject.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/project-details/${selectedProject.id}`,\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select the type of file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-files\",\n          ...getRootProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Drag and drop your files here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-previews\",\n            children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-preview\",\n              children: file.type.startsWith(\"image/\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: file.preview,\n                alt: file.name,\n                style: {\n                  width: 100,\n                  height: 100\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)\n            }, file.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            disabled: uploading,\n            children: uploading ? \"Uploading...\" : \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"8H+06ZrcSQwV98g+eZDZREdfwE4=\", false, function () {\n  return [useDropzone];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useDropzone","axios","Link","jsxDEV","_jsxDEV","projects","id","name","Dashboard","_s","selectedProject","setSelectedProject","files","setFiles","uploading","setUploading","handleProjectClick","project","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","handleUpload","alert","formData","FormData","forEach","append","toString","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","type","startsWith","src","alt","style","width","height","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aishr/Downloads/Excentrixproject (1)/Excentrixproject/projectManager/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/styles.css\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst projects = [\r\n  { id: 1, name: \"Documents\" },\r\n  { id: 2, name: \"Audio Files\" },\r\n  { id: 3, name: \"video Files\" },\r\n  { id: 4, name: \"Spreadsheets\" },\r\n  { id: 5, name: \"Reports\" },\r\n  { id: 6, name: \"Designs\" },\r\n  { id: 7, name: \"Word Document\" },\r\n  { id: 8, name: \"Presentation\" },\r\n  { id: 9, name: \"Image Files\" },\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleProjectClick = (project) => {\r\n    setSelectedProject(project);\r\n  };\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*,application/pdf\",\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedProject) {\r\n      alert(\"Please select a project first\");\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      files.forEach((file) => {\r\n        formData.append(\"file\", file);\r\n      });\r\n      formData.append(\"projectId\", selectedProject.id.toString());\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/api/files\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(response.data);\r\n      alert(\"Files uploaded successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Error uploading files.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <aside className=\"sidebar\">\r\n        <h1>Projects/Type Of File</h1>\r\n        <ul>\r\n          {projects.map((project) => (\r\n            <li\r\n              key={project.id}\r\n              onClick={() => handleProjectClick(project)}\r\n              className={selectedProject?.id === project.id ? \"active\" : \"\"}\r\n            >\r\n              {project.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </aside>\r\n      <main className=\"main-content\">\r\n        <section className=\"project-info\">\r\n          {selectedProject ? (\r\n            <div>\r\n              <h2>{selectedProject.name}</h2>\r\n              <p>Details about {selectedProject.name}</p>\r\n              <Link to={`/project-details/${selectedProject.id}`}>\r\n                View Details\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <p>Select the type of file</p>\r\n          )}\r\n        </section>\r\n        <section className=\"file-upload\">\r\n          <div className=\"drop-files\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <h3>Drag and drop your files here</h3>\r\n            <div className=\"file-previews\">\r\n              {files.map((file) => (\r\n                <div key={file.name} className=\"file-preview\">\r\n                  {file.type.startsWith(\"image/\") ? (\r\n                    <img\r\n                      src={file.preview}\r\n                      alt={file.name}\r\n                      style={{ width: 100, height: 100 }}\r\n                    />\r\n                  ) : (\r\n                    <div>{file.name}</div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"upload-button-container\">\r\n            <button onClick={handleUpload} disabled={uploading}>\r\n              {uploading ? \"Uploading...\" : \"Upload Files\"}\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}